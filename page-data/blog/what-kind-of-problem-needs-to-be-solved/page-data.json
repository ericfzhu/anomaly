{
    "componentChunkName": "component---src-pages-blog-contentful-blog-post-title-js",
    "path": "/blog/what-kind-of-problem-needs-to-be-solved/",
    "result": {"data":{"contentfulBlogPost":{"title":"What kind of Problem Needs to be Solved?","text":{"childMarkdownRemark":{"html":"<p>A building undergoing increasing structural damage. A bridge in different climates experiences qualitatively different vibrations. An aircraft begins on the runway, accelerates, cruises in the sky while experiencing turbulence, then begins descending. These are all examples of structures that undergo avariety of stresses in distinct contextual ‘states’. It would be advantageous for operators to be able to detect these contextual shifts in both controlled and non-controlled settings.</p>\n<p>Now, let us suppose we can record data by attaching an array of sensors (accelerometers, pressuresensors, thermometers) to the structure to try and divine when such transitions occur. How should we approach such a problem? Preliminary visual inspection of accelerometer data on aircrafts and other structures gives no clues as to how this might be done (fig:aircraft phases, fig:building experiment blog). Even worse, as you can see, sensor data is naturally very noisy, and so any method we think up of needs to be able to contend with this type of unstructured, messy, time-correlated data, and anomalous transitions may not be able to be captured by a simple set of features.</p>\n<p>In this blog post, we introduce our proposed methodology for detecting anomalies in context; specifically, we will use our methodology to detect transitions between different damage levels in an experimental building data set (the ‘building’ or ‘bookshelf’ data set). The data set we will focus on is accelerometer data coming from a sensor array attached to a miniature three-storeyed building structure. To introduce anomalies into the data, damage was introduced to certain sections of the structure (bolts loosening, removing brackets, etc.). The goal is to create an algorithm that can automatically identify when a part of the underlying structure undergoes an increase in damage.</p>\n<p>In our background investigation of this problem, we trained and reported the performance of a number of baseline models - off-the-shelf machine learning algorithms - that could potentially solve the damage detection problem, with models such as feature-extraction-SVMs and 1D convolution networks. However, we ran into a number of issues which commonly plague all anomaly detection algorithms. A lack of training data on the most important anomalies means that any supervised algorithm could learn normal behaviour quite well, but struggles to generalise beyond the baseline. The complexity (and noisiness) of building accelerometer data means manual feature engineering can hardly capture the necessary differentiators between different damage levels, leading to poor performance. If we opt for automatic feature extraction (as in 1D convolution networks) then we run afoul of model explainability:in high-risk contexts such as building/aircraft/bridge monitoring, understanding the <em>how</em> and <em>why</em> in anomaly detection is almost as important as the power of the model itself.</p>\n<p>\n        <div class=\"embedVideo-container\">\n            <iframe\n              title=\"\"\n              width=\"800\"\n              height=\"400\"\n              src=\"https://www.youtube.com/embed/i1sp4X57TL4?rel=0\"\n              class=\"embedVideo-iframe\"\n              style=\"border:0\"\n              \n              loading=\"lazy\"\n              allowfullscreen\n\t      sandbox=\"allow-same-origin allow-scripts allow-popups\"\n            ></iframe>\n        </div>\nIs it a banana or a toaster? Knowing <em>how</em> a model categorises something as anomalous is essential in high-impact environments, where a false negative could imply disastrous consequences..</p>\n<p>In order to create more intelligent, well-performing and explainable models that do not rely on the existence of prior training data, we need to introduce a number of key players that we used in our project to efficiently solve the contextual anomaly detection problem.</p>\n<p><img src=\"//images.ctfassets.net/j1i7j7n6v3mr/5w92AxbdhjCJIzFXg95dc0/c558493d0b08de283aa1c4f6ee0503be/air_time.PNG\" alt=\"air time\">\nFigure 1: Two different distinct cruise phases for an aircraft, with data for Cruise Phase 2 in both healthy and damaged aircrafts.</p>\n<p><img src=\"//images.ctfassets.net/j1i7j7n6v3mr/aVIrEEyAe0tekWn4pAJsb/316a43364ebe8edac0249f1b9d04e727/building_experiment_time.PNG\" alt=\"building experiment time\">\nFigure 2: Time series data of a building structure being shaken as the structure is increasingly damaged (state: healthy, mild damage, large damage and extreme damage, in that order). While healthy data is easy to tell apart from the rest, it is not easy to visually categorise the three different levels of damage!</p>\n<p>In order to create more intelligent, well-performing models with the above characteristics, we need to introduce a number of key players that we used in our project to efficiently solve the contextual anomaly detection problem.</p>\n<p><strong>Follow-up</strong>: If you want to run the code locally and check the results yourself, please clone a local version of our repository from <a href=\"https://www.github.com/sjmluo/Contextually_Situated_Anomaly_Detection\">here</a>. Thank you for reading!</p>"}},"date":"15 December 2021"}},"pageContext":{"id":"7f30ed6f-1242-54de-8a64-7bf38ecfa53f","title":"What kind of Problem Needs to be Solved?","__params":{"title":"what-kind-of-problem-needs-to-be-solved"}}},
    "staticQueryHashes": []}